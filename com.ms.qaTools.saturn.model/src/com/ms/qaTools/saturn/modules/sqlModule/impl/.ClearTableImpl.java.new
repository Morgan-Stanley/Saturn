/**
 * <copyright>
 * </copyright>
 *
 * $Id: //std/qaTools/saturn/trunk/eclipse/com.ms.qaTools.saturn.model/src/com/ms/qaTools/saturn/modules/sqlModule/impl/ClearTableImpl.java#5 $
 */
package com.ms.qaTools.saturn.modules.sqlModule.impl;

import com.ms.qaTools.saturn.modules.sqlModule.ClearTable;
import com.ms.qaTools.saturn.modules.sqlModule.SqlModulePackage;

import com.ms.qaTools.saturn.values.impl.ComplexValueImpl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Clear Table</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link com.ms.qaTools.saturn.modules.sqlModule.impl.ClearTableImpl#isEnabled <em>Enabled</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class ClearTableImpl extends ComplexValueImpl implements ClearTable
{
  /**
     * The default value of the '{@link #isEnabled() <em>Enabled</em>}' attribute.
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @see #isEnabled()
     * @generated
     * @ordered
     */
  protected static final boolean ENABLED_EDEFAULT = true;

  /**
     * The cached value of the '{@link #isEnabled() <em>Enabled</em>}' attribute.
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @see #isEnabled()
     * @generated
     * @ordered
     */
  protected boolean enabled = ENABLED_EDEFAULT;

  /**
     * This is true if the Enabled attribute has been set.
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     * @ordered
     */
  protected boolean enabledESet;

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  protected ClearTableImpl()
  {
        super();
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  @Override
  protected EClass eStaticClass()
  {
        return SqlModulePackage.Literals.CLEAR_TABLE;
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  public boolean isEnabled()
  {
        return enabled;
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  public void setEnabled(boolean newEnabled)
  {
        boolean oldEnabled = enabled;
        enabled = newEnabled;
        boolean oldEnabledESet = enabledESet;
        enabledESet = true;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.SET, SqlModulePackage.CLEAR_TABLE__ENABLED, oldEnabled, enabled, !oldEnabledESet));
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  public void unsetEnabled()
  {
        boolean oldEnabled = enabled;
        boolean oldEnabledESet = enabledESet;
        enabled = ENABLED_EDEFAULT;
        enabledESet = false;
        if (eNotificationRequired())
            eNotify(new ENotificationImpl(this, Notification.UNSET, SqlModulePackage.CLEAR_TABLE__ENABLED, oldEnabled, ENABLED_EDEFAULT, oldEnabledESet));
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  public boolean isSetEnabled()
  {
        return enabledESet;
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
        switch (featureID) {
            case SqlModulePackage.CLEAR_TABLE__ENABLED:
                return isEnabled() ? Boolean.TRUE : Boolean.FALSE;
        }
        return super.eGet(featureID, resolve, coreType);
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  @Override
  public void eSet(int featureID, Object newValue)
  {
        switch (featureID) {
            case SqlModulePackage.CLEAR_TABLE__ENABLED:
                setEnabled(((Boolean)newValue).booleanValue());
                return;
        }
        super.eSet(featureID, newValue);
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  @Override
  public void eUnset(int featureID)
  {
        switch (featureID) {
            case SqlModulePackage.CLEAR_TABLE__ENABLED:
                unsetEnabled();
                return;
        }
        super.eUnset(featureID);
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  @Override
  public boolean eIsSet(int featureID)
  {
        switch (featureID) {
            case SqlModulePackage.CLEAR_TABLE__ENABLED:
                return isSetEnabled();
        }
        return super.eIsSet(featureID);
    }

  /**
     * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
     * @generated
     */
  @Override
  public String toString()
  {
        if (eIsProxy()) return super.toString();

        StringBuffer result = new StringBuffer(super.toString());
        result.append(" (enabled: ");
        if (enabledESet) result.append(enabled); else result.append("<unset>");
        result.append(')');
        return result.toString();
    }

} //ClearTableImpl
