package com.ms.qaTools.kronus.rfb.OPERATORS

include com.ms.qaTools.kronus.rfb.PRELUDE

val TEST_STRING_ADD = ASSERT_EQUAL("FOO" + "BAR", "FOOBAR")
val TEST_INTEGER_ADD = ASSERT_EQUAL(1 + 42, 43)
val TEST_INTEGER_MINUS = ASSERT_EQUAL(42 - 1, 41)
val TEST_INTEGER_TIMES = ASSERT_EQUAL(6 * 7, 42)
val TEST_INTEGER_LESS = ASSERT(6 < 7)
val TEST_INTEGER_LESS_EQ = ASSERT(42 <= 42)
val TEST_INTEGER_GREATER = ASSERT(7 > 6)
val TEST_INTEGER_GREATER_EQ = ASSERT(7 >= 6)
val TEST_INTEGER_EQ_EQ = ASSERT(42 == 42)
val TEST_INTEGER_BANG_EQ = ASSERT(42 != 4)
val TEST_DOUBLE_ADD = ASSERT_EQUAL_DOUBLE(1.0 + 42.1, 43.1)
val TEST_DOUBLE_MINUS = ASSERT_EQUAL_DOUBLE(42.1 - 1, 41.1)
val TEST_DOUBLE_TIMES = ASSERT_EQUAL_DOUBLE(6.1 * 7, 42.7)
val TEST_DOUBLE_DIV = ASSERT_EQUAL_DOUBLE(42.0 / 7, 6.0)
val TEST_DOUBLE_LESS = ASSERT(6.1 < 7.1)
val TEST_DOUBLE_LESS_EQ = ASSERT(42.1 <= 42.1)
val TEST_DOUBLE_GREATER = ASSERT(7.1 > 6.1)
val TEST_DOUBLE_GREATER_EQ = ASSERT(7.1 >= 6.1)
val TEST_DOUBLE_BANG_EQ = ASSERT(42.1 != 4.1)
val TEST_BOOLEAN_BANG = ASSERT(!(42 == 4))
val TEST_BOOLEAN_AMP_AMP = ASSERT(true && true)
val TEST_BOOLEAN_BAR_BAR = ASSERT(false || true)

val TEST_PRECEDENCE_1 = ASSERT_EQUAL(1 + 2 * 3, 7)
val TEST_PRECEDENCE_2 = ASSERT(1 == 1 && 2 == 2)
val TEST_PRECEDENCE_3 = ASSERT(1 == 1 || 1 == 2 && 2 == 3)
val TEST_PRECEDENCE_4 = ASSERT_EQUAL(2 * (3 + 1), 8)
